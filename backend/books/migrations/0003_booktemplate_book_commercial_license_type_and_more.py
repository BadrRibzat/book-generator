# Generated by Django 4.2.7 on 2025-10-20 14:59

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('books', '0002_alter_book_domain_alter_book_sub_niche'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(choices=[('language_kids', 'Language and Kids'), ('tech_ai', 'Technology and AI'), ('nutrition', 'Nutrition and Wellness'), ('meditation', 'Meditation'), ('home_workout', 'Home Workout')], max_length=50)),
                ('sub_niche', models.CharField(choices=[('ai_learning_stories', 'AI-Powered Personalized Learning Stories'), ('multilingual_coloring', 'Multilingual Coloring Books'), ('kids_mindful_journals', "Kids' Mindful Activity Journals"), ('ai_ethics', 'AI Ethics and Future Trends'), ('nocode_guides', 'No-Code/Low-Code Development Guides'), ('smart_home_diy', 'DIY Smart Home and Automation'), ('specialty_diet', 'Specialty Diet Cookbooks'), ('plant_based_cooking', 'Plant-Based Cooking for Beginners'), ('nutrition_mental_health', 'Nutrition for Mental Health'), ('mindfulness_anxiety', 'Mindfulness and Anxiety Workbooks'), ('sleep_meditation', 'Sleep Meditation Stories'), ('gratitude_journals', 'Daily Gratitude Journals with Prompts'), ('equipment_free', 'Equipment-Free Workout Plans'), ('yoga_remote_workers', 'Yoga and Stretching for Remote Workers'), ('mobility_training', "Beginner's Mobility Training")], max_length=50)),
                ('title_template', models.CharField(help_text='Template for generating title', max_length=200)),
                ('outline', models.TextField(help_text='Template book outline')),
                ('style_guide', models.TextField(blank=True, help_text='Writing style guidelines', null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='commercial_license_type',
            field=models.CharField(blank=True, choices=[('personal', 'Personal Use Only'), ('commercial', 'Commercial Use'), ('resell', 'Resell Rights')], max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='book',
            name='cost_to_generate',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Cost to generate this book', max_digits=10),
        ),
        migrations.AddField(
            model_name='book',
            name='currency',
            field=models.CharField(default='USD', help_text='Currency for this book', max_length=3),
        ),
        migrations.AddField(
            model_name='book',
            name='generation_completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='book',
            name='generation_started_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='book',
            name='generation_time_seconds',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='book',
            name='is_commercial',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='book',
            name='is_shared',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='book',
            name='shared_with',
            field=models.ManyToManyField(blank=True, related_name='shared_books', to=settings.AUTH_USER_MODEL),
        ),
    ]
