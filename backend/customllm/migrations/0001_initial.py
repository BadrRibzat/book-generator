# Generated by Django 4.2.7 on 2025-10-27 17:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainingDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(choices=[('ai_automation', 'AI & Automation'), ('parenting', 'Parenting: Pre-school Speech & Learning'), ('ecommerce', 'E-commerce & Digital Products')], max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('training_samples_count', models.IntegerField(default=0)),
                ('last_trained', models.DateTimeField(blank=True, null=True)),
                ('training_quality_score', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Training Domain',
                'verbose_name_plural': 'Training Domains',
                'db_table': 'customllm_training_domains',
            },
        ),
        migrations.CreateModel(
            name='TrainingNiche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('keywords', models.JSONField(default=list)),
                ('target_audiences', models.JSONField(default=list)),
                ('training_samples_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='niches', to='customllm.trainingdomain')),
            ],
            options={
                'verbose_name': 'Training Niche',
                'verbose_name_plural': 'Training Niches',
                'db_table': 'customllm_training_niches',
                'unique_together': {('domain', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('samples_count', models.IntegerField(default=0)),
                ('epochs', models.IntegerField(default=1)),
                ('batch_size', models.IntegerField(default=8)),
                ('training_loss', models.FloatField(blank=True, null=True)),
                ('validation_accuracy', models.FloatField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('log', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='training_sessions', to='customllm.trainingdomain')),
            ],
            options={
                'verbose_name': 'Training Session',
                'verbose_name_plural': 'Training Sessions',
                'db_table': 'customllm_training_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_type', models.CharField(choices=[('outline', 'Book Outline'), ('chapter', 'Chapter Content'), ('introduction', 'Introduction'), ('conclusion', 'Conclusion'), ('cover_description', 'Cover Description')], max_length=50)),
                ('prompt', models.TextField(help_text='Input prompt for the model')),
                ('completion', models.TextField(help_text='Expected output/completion')),
                ('context', models.JSONField(default=dict, help_text='Additional context (audience, length, style, etc.)')),
                ('quality_score', models.FloatField(default=1.0, help_text='Quality rating 0-1')),
                ('usage_count', models.IntegerField(default=0, help_text='Times used in training')),
                ('success_rate', models.FloatField(default=0.0, help_text='Success rate when used')),
                ('source', models.CharField(default='manual', help_text='manual, generated, imported', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='customllm.trainingdomain')),
                ('niche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='customllm.trainingniche')),
            ],
            options={
                'verbose_name': 'Training Sample',
                'verbose_name_plural': 'Training Samples',
                'db_table': 'customllm_training_samples',
                'indexes': [models.Index(fields=['domain', 'niche', 'sample_type'], name='customllm_t_domain__5500bf_idx'), models.Index(fields=['quality_score'], name='customllm_t_quality_6c7fcc_idx')],
            },
        ),
    ]
